# Base class
class Smartphone:
    def __init__(self, brand, model, storage):
        self.brand = brand
        self.model = model
        self.storage = storage  # in GB

    def make_call(self, number):
        print(f"{self.brand} {self.model} is calling {number}...")

    def get_info(self):
        print(f"Brand: {self.brand}, Model: {self.model}, Storage: {self.storage}GB")

# Inherited class
class GamingPhone(Smartphone):
    def __init__(self, brand, model, storage, refresh_rate):
        super().__init__(brand, model, storage)
        self.refresh_rate = refresh_rate  # in Hz

    def get_info(self):  # Polymorphism: override method
        print(f"{self.brand} {self.model} | {self.storage}GB | {self.refresh_rate}Hz Gaming Display")

    def activate_gaming_mode(self):
        print(f"{self.model} gaming mode activated! Boosting performance...")

# Create instances
phone1 = Smartphone("Apple", "iPhone 14", 128)
phone2 = GamingPhone("Asus", "ROG Phone 7", 256, 165)

# Use methods
phone1.get_info()
phone1.make_call("123-456-7890")

print()  # spacing

phone2.get_info()
phone2.make_call("555-777-8888")
phone2.activate_gaming_mode()
